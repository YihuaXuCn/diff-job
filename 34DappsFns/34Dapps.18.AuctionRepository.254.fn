functionbidOnAuction(uint_auctionId)publicpayable{
uint256ethAmountSent=msg.value;
AuctionmemorymyAuction=auctions[_auctionId];
if(myAuction.owner==msg.sender)revert();
if(block.timestamp>myAuction.blockDeadline)revert();
uintbidsLength=auctionBids[_auctionId].length;
uint256tempAmount=myAuction.startPrice;
BidmemorylastBid;
if(bidsLength>0){
lastBid=auctionBids[_auctionId][bidsLength-1];
tempAmount=lastBid.amount;
}
if(ethAmountSent<tempAmount)revert();
if(bidsLength>0){
if(!lastBid.from.send(lastBid.amount)){
revert();
}
}
BidmemorynewBid;
newBid.from=msg.sender;
newBid.amount=ethAmountSent;
auctionBids[_auctionId].push(newBid);
emitBidSuccess(msg.sender,_auctionId);
}
