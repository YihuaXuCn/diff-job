function_bid(uint256_tokenId,uint256_bidAmount)
internal
returns(uint256)
{
//Getareferencetotheauctionstruct
Auctionstorageauction=tokenIdToAuction[_tokenId];
//Explicitlycheckthatthisauctioniscurrentlylive.
//(BecauseofhowEthereummappingswork,wecan'tjustcount
//onthelookupabovefailing.Aninvalid_tokenIdwilljust
//returnanauctionobjectthatisallzeros.)
require(_isOnAuction(auction));
//Checkthatthebidisgreaterthanorequaltothecurrentprice
uint256price=_currentPrice(auction);
require(_bidAmount>=price);
//Grabareferencetothesellerbeforetheauctionstruct
//getsdeleted.
addressseller=auction.seller;
//Thebidisgood!Removetheauctionbeforesendingthefees
//tothesendersowecan'thaveareentrancyattack.
_removeAuction(_tokenId);
//Transferproceedstoseller(ifthereareany!)
if(price>0){
//Calculatetheauctioneer'scut.
//(NOTE:_computeCut()isguaranteedtoreturna
//value<=price,sothissubtractioncan'tgonegative.)
uint256auctioneerCut=_computeCut(price);
uint256sellerProceeds=price-auctioneerCut;
//NOTE:Doingatransfer()inthemiddleofacomplex
//methodlikethisisgenerallydiscouragedbecauseof
//reentrancyattacksandDoSattacksiftheselleris
//acontractwithaninvalidfallbackfunction.Weexplicitly
//guardagainstreentrancyattacksbyremovingtheauction
//beforecallingtransfer(),andtheonlythingtheseller
//canDoSisthesaleoftheirownasset!(Andifit'san
//accident,theycancallcancelAuction().)
seller.transfer(sellerProceeds);
}
//Calculateanyexcessfundsincludedwiththebid.Iftheexcess
//isanythingworthworryingabout,transferitbacktobidder.
//NOTE:Wecheckedabovethatthebidamountisgreaterthanor
//equaltothepricesothiscannotunderflow.
uint256bidExcess=_bidAmount-price;
//Returnthefunds.Similartotheprevioustransfer,thisis
//notsusceptibletoare-entryattackbecausetheauctionis
//removedbeforeanytransfersoccur.
msg.sender.transfer(bidExcess);
//Telltheworld!
AuctionSuccessful(_tokenId,price,msg.sender);
returnprice;
}
