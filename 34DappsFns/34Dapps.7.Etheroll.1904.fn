functionplayerRollDice(uintrollUnder)public
payable
gameIsActive
betIsValid(msg.value,rollUnder)
{
/*
*assignpartiallyencryptedquerytooraclize
*onlytheapiKeyisencrypted
*integerqueryisinplaintext
*/
randomQueryID+=1;
stringmemoryqueryString1="[URL]['json(https://api.random.org/json-rpc/1/invoke).result.random[\"serialNumber\",\"data\"]','\\n{\"jsonrpc\":\"2.0\",\"method\":\"generateSignedIntegers\",\"params\":{\"apiKey\":${[decrypt]BBMyVwxtiTy5oKVkRGwW2Yc094lpQyT74AdenJ1jywmN4rNyxXqidtDsDBPlASVWPJ0t8SwjSYjJvHAGS83Si8sYCxNH0y2kl/Vw5CizdcgUax1NtTdFs1MXXdvLYgkFq3h8b2qV2oEvxVFqL7v28lcGzOuy5Ms=},\"n\":1,\"min\":1,\"max\":100,\"replacement\":true,\"base\":10${[identity]\"}\"},\"id\":";
stringmemoryqueryString2=uint2str(randomQueryID);
stringmemoryqueryString3="${[identity]\"}\"}']";
stringmemoryqueryString1_2=queryString1.toSlice().concat(queryString2.toSlice());
stringmemoryqueryString1_2_3=queryString1_2.toSlice().concat(queryString3.toSlice());
bytes32rngId=oraclize_query("nested",queryString1_2_3,gasForOraclize);
/*mapbetidtothisoraclizequery*/
playerBetId[rngId]=rngId;
/*mapplayerluckynumbertothisoraclizequery*/
playerNumber[rngId]=rollUnder;
/*mapvalueofwagertothisoraclizequery*/
playerBetValue[rngId]=msg.value;
/*mapplayeraddresstothisoraclizequery*/
playerAddress[rngId]=msg.sender;
/*safelymapplayerprofittothisoraclizequery*/
playerProfit[rngId]=((((msg.value*(100-(safeSub(rollUnder,1))))/(safeSub(rollUnder,1))+msg.value))*houseEdge/houseEdgeDivisor)-msg.value;
/*safelyincreasemaxPendingPayoutsliability-calcallpendingpayoutsunderassumptiontheywin*/
maxPendingPayouts=safeAdd(maxPendingPayouts,playerProfit[rngId]);
/*checkcontractcanpayoutonwin*/
if(maxPendingPayouts>=contractBalance)throw;
/*providesaccuratenumbersforweb3andallowsformanualrefundsincaseofnooraclize__callback*/
LogBet(playerBetId[rngId],playerAddress[rngId],safeAdd(playerBetValue[rngId],playerProfit[rngId]),playerProfit[rngId],playerBetValue[rngId],playerNumber[rngId],randomQueryID);
}
